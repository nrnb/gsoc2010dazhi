/*
 Copyright 2010 Alexander Pico
 Licensed under the Apache License, Version 2.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 
 	
 	http://www.apache.org/licenses/LICENSE-2.0 
 	
 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License. 
 */

package org.genmapp.expressionreader.ui;

import cytoscape.task.ui.JTaskConfig;
import cytoscape.task.util.TaskManager;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import org.genmapp.expressionreader.geo.data.SOFT;
import org.genmapp.expressionreader.tasks.GSMImportTask;

/**
 *
 * @author djiao
 */
public class GSMImportDialog extends javax.swing.JDialog {

    private List<SOFT> softList = null;

    /** Creates new form GSMDialog */
    public GSMImportDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateAttributes();
        pack();
    }

    public void setSOFTList(List<SOFT> list) {
        this.softList = list;
        StringBuilder ids = new StringBuilder();
        for (int i = 0; i < list.size(); i++) {
            ids.append(list.get(i).getId());
            if (i < list.size()-1) {
                ids.append("; ");
            }
        }
        this.idField.setText(ids.toString());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createBtnGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nodeAttrCombo = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        importBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(3, 1, 1, 1));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("GSM ID(s): ");
        jPanel1.add(jLabel1, java.awt.BorderLayout.WEST);

        idField.setEditable(false);
        idField.setText("GSM11805");
        idField.setPreferredSize(new java.awt.Dimension(80, 30));
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });
        jPanel1.add(idField, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1);

        jLabel2.setText("Map Probe to Node Attribute: ");
        jPanel3.add(jLabel2);

        nodeAttrCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID" }));
        jPanel3.add(nodeAttrCombo);

        getContentPane().add(jPanel3);

        importBtn.setText(" Import ");
        importBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBtnActionPerformed(evt);
            }
        });
        jPanel4.add(importBtn);

        cancelBtn.setText(" Cancel ");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        jPanel4.add(cancelBtn);

        getContentPane().add(jPanel4);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    private void importBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBtnActionPerformed
        GSMImportTask task = new GSMImportTask((String) nodeAttrCombo.getSelectedItem(), softList);
        JTaskConfig config = task.getDefaultTaskConfig();
        TaskManager.executeTask(task, config);
        this.dispose();
    }//GEN-LAST:event_importBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GSMImportDialog dialog = new GSMImportDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.ButtonGroup createBtnGroup;
    private javax.swing.JTextField idField;
    private javax.swing.JButton importBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JComboBox nodeAttrCombo;
    // End of variables declaration//GEN-END:variables

    private void populateAttributes() {
                // Get attributes, and populate attributes comboboxes
        List<String> list = Arrays.asList(cytoscape.Cytoscape.getNodeAttributes().getAttributeNames());
        Collections.sort(list);

        List<String> attributes = new ArrayList<String>();

        // TODO remove in Cytoscape3
        attributes.add(0, "ID");
        // TODO: modify if local attribute implemented

        attributes.addAll(list);
        this.nodeAttrCombo.setModel(new DefaultComboBoxModel(attributes.toArray()));
    }
}
